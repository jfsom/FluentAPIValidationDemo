// <auto-generated />
using FluentAPIValidationDemo.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FluentAPIValidationDemo.Migrations
{
    [DbContext(typeof(ECommerceDbContext))]
    [Migration("20250110185657_MG1")]
    partial class MG1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FluentAPIValidationDemo.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(8,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            Name = "Laptop",
                            Price = 750.00m,
                            Stock = 20
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 2,
                            Name = "Smartphone",
                            Price = 500.00m,
                            Stock = 50
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 3,
                            Name = "Headphones",
                            Price = 100.00m,
                            Stock = 100
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
